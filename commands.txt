# IMAGES
docker images || docker image ls - показывает существующие образы
docker rmi <image name || image id> - удалить образ / образы (можно указать несколько образов через пробел)
docker image prune - удалить все неиспользуемые образы
docker image inspect <image name || image id> - посмотреть подробную информацию об образе




# CONTAINERS

# просмотр

docker ps - показывает список запущенных контейнеров
docker ps -a - показывает список всех контейнеров (запущенных и нет)

# запуск и остановка

docker run <image name || image id> - запустить контейнер из указанного образа
docker run -it <image name || image id> - запустить контейнер в интерактивном режиме
docker run -p <host port>:<docker port> <image name || image id> - запустить контейнер с пробросом портов
docker stop <container name || container id> - остановить запущенный контейнер
docker run -d <image name || image id> - запустить контейнер в детачт режиме (с непривязанной консолью)
docker run  --name <custom name> <image name || image id> - запустить контейнер с кастомным именем
docker run --rm <image name || image id> - после остановки контейнера он будет автоматически удален
docker run -e <env name>=<env value> <image name || image id> - запустить контейнер с определенным значением переменной
docker run --env-file <file path> <image name || image id> - запустить контейнер со значением переменных из указанного файла
docker run -v <volume name>:<volume path> <image name || image id> - запустить контейнер с именованным томом
docker run --restart=<strategy> ... - запустить контейнер, указав что необходимо делать в случае завершения
    ... no - не перезапускать при выходе из контейнера
    ... always - всегда перезапускать при выходе из контейнера
    ... unless-stopped - всегда перезагружать кроме явной остановки
    ... on-failure[:max-retry] - перезапускать только в случае сбоя



# менеджмент

docker rm <container name || container id> - удалить контейнер
docker container prune - удалить все незапущенные контейнеры

# операции
docker attach <container name || container id> - подключиться к консоли контейнера
docker logs <container name || container id> - посмотреть логи контейнера


# BUILDS
docker build . - собрать образ по инструкции из докерфайла в текущей директории
docker build -t <custom name> - собрать образ с кастомным именем
docker build -t <custom name>:<tag> - собрать образ с кастомным именем и определенным тегом

# VOLUMES
docker volume ls - вывести список томов
docker volume inspect <volume name> - просмотреть информацию о томе
docker volume create <volume name> - создать том
docker volume rm <volume name> - удалить том
docker volume prune - удалить все неиспользуемые тома

# DOCKER HUB
docker push <repository name>/<image name>:<tag> - запушить образ в удаленный репозиторий на докерхабе

# DOCKER COMPOSE
docker-compose up -d - разворачивает стек из файла докер-компауз текущей директории
docker-compose down - останавливает стек и удаляет все контейнеры из сети
docker-compose ps - показывает контейнеры, за которые отвечает докер-компауз
docker-compose logs - общий пулл логов поднятого стека докер-компауз
docker-compose up -d --scale vote=3 - управление количеством реплик определенной службы